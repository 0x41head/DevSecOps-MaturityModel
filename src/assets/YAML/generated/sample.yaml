dimension:
  -
    name: Build and Deployment
    subdimension:
      level-1:
      - assessment: '- Show your build pipeline and an exemplary job (build + test).

          - Show that every team member has access.

          - Show that failed jobs are fixed.

          '
        credits: 'AppSecure-nrw [Security Belts](https://github.com/AppSecure-nrw/security-belts/)

          '
        difficultyOfImplementation:
          knowledge: 2
          resources: 2
          time: 2
        implementation:
        - $ref: data/dimensions-subdimensions-activities/implementations.yaml#/implementations/ci-cd-tools
        level: 1
        md-description: '## Benefits:

          Quality is visible to everyone

          There is a single instance deciding whether the code meets its quality (single
          ground of truth).

          Deterministic and reproducible builds

          '
        measure: Use continuous automated building and testing of the software.
        name: Continuous integration
        references:
          iso27001-2017:
          - iso27001-2017:14.2.6
          samm2:
          - I-SB-1-A
        risk: Quality is not visible to everyone, quality checks are distributed or
          manually and not deterministic.
        usefulness: 2
      - dependsOn:
        - Continuous Integration
        description-md: 'Sample evidence as an attribute in the yaml: The build process
          is defined in <a href="REPLACE-ME">REPLACE-ME Pipeline</a>

          in the folder <i>vars</>. Projects are using a <i>Jenkinsfile</i> to use the

          defined process.

          '
        difficultyOfImplementation:
          knowledge: 2
          resources: 2
          time: 3
        implementation:
        - $ref: data/dimensions-subdimensions-activities/implementations.yaml#/implementations/ci-cd-tools
        - $ref: data/dimensions-subdimensions-activities/implementations.yaml#/implementations/container-technologi
        level: 1
        measure: A well defined build process lowers the possibility of errors during
          the build process.
        name: Defined build process
        references:
          iso27001-2017:
          - 12.1.1
          - 14.2.2
          samm2:
          - I-SB-1-A
        risk:
        - Performing builds without a defined process is error prone; for example, as
          a result of incorrect security related configuration.
        usefulness: 4
      level-2:
      - description: 'While building and testing artifacts, third party systems, application
          frameworks

          and 3rd party libraries are used. These might be malicious as a result of

          vulnerable libraries or because they are altered during the delivery phase.'
        difficultyOfImplementation:
          knowledge: 2
          resources: 2
          time: 2
        implementation:
        - $ref: data/dimensions-subdimensions-activities/implementations.yaml#/implementations/ci-cd-tools
        - $ref: data/dimensions-subdimensions-activities/implementations.yaml#/implementations/container-technologi
        level: 2
        measure: Each step during within the build and testing phase is performed in
          a separate virtual environments, which is destroyed afterward.
        meta:
          implementationGuide: Depending on your environment, usage of virtual machines
            or container technology is a good way. After the build, the filesystem should
            not be used again in other builds.
        name: Building and testing of artifacts in virtual environments
        references:
          iso27001-2017:
          - iso27001-2017:14.2.6
          samm2:
          - I-SB-2-A
        risk:
        - 'While building and testing artifacts, third party systems, application frameworks

          and 3rd party libraries are used. These might be malicious as a result of

          vulnerable libraries or because they are altered during the delivery phase.'
        usefulness: 2
      - comment: The usage of pinning requires a good processes for patching. Therefore,
          choose this activity wisly.
        dependsOn:
        - Defined build process
        difficultyOfImplementation:
          knowledge: 2
          resources: 2
          time: 2
        implementation:
        - Container technology automatically creates a hash for images, which can be
          used.
        - Immutable images are an other way, e.g. by using a registry, which doesn't
          allow overriding of images.
        level: 2
        measure: Pinning of artifacts ensure that changes are performed only when intended.
        name: Pinning of artifacts
        references:
          iso27001-2017:
          - 14.2.6
          samm2:
          - I-SB-1-A
        risk:
        - Unauthorized manipulation of artifacts might be difficult to spot. For example,
          this may result in using images with malicious code. Also, intendend major
          changes, which are automatically used in an image used might break the functionality.
        usefulness: 3
      - dependsOn:
        - Defined build process
        difficultyOfImplementation:
          knowledge: 2
          resources: 3
          time: 2
        implementation: []
        iso27001-2017:
        - '8.1'
        - '8.2'
        level: 2
        measure: Creation of an SBOM of components (e.g. application and container image
          content) during build.
        name: SBOM of components
        risk:
        - In case a vulnerability of severity high or critical exists, it needs to be
          known where an artifacts with that vulnerability is deployed with which dependencies.
        usefulness: 3
      level-3:
      - dependsOn:
        - Defined build process
        difficultyOfImplementation:
          knowledge: 2
          resources: 2
          time: 2
        implementation: []
        level: 3
        measure: Digitally signing commits helps to prevent unauthorized manipulation
          of source code.
        name: Signing of code
        references:
          iso27001-2017:
          - 14.2.6
          samm2: I-SB-2-A
        risk:
        - Unauthorized manipulation of source code might be difficult to spot.
        usefulness: 3
      - dependsOn:
        - Defined build process
        - Pinning of artifacts
        difficultyOfImplementation:
          knowledge: 2
          resources: 2
          time: 2
        implementation:
        - $ref: data/dimensions-subdimensions-activities/implementations.yaml#/implementations/docker-content-trust
        - $ref: data/dimensions-subdimensions-activities/implementations.yaml#/implementations/in-toto
        level: 3
        measure: Digitally signing artifacts for all steps during the build and especially
          docker images, helps to ensure their integrity.
        name: Signing of artifacts
        references:
          iso27001-2017:
          - 14.2.6
          samm2:
          - I-SB-1-A
        risk:
        - Unauthorized manipulation of artifacts might be difficult to spot. For example,
          this may result in images with malicious code in the Docker registry.
        usefulness: 4
      name: Build
  -
    name: Build and Deployment
    subdimension:
      level-1:
      - dependsOn:
        - Continuous Integration
        difficultyOfImplementation:
          knowledge: 2
          resources: 1
          time: 2
        implementation:
        - $ref: data/dimensions-subdimensions-activities/implementations.yaml#/implementations/ci-cd-tools
        - $ref: data/dimensions-subdimensions-activities/implementations.yaml#/implementations/docker
        level: 1
        measure: A defined deployment process significantly lowers the likelihood of
          errors during the deployment phase.
        name: Defined deployment process
        references:
          iso27001-2017:
          - 12.1.1
          - 14.2.2
          samm2: I-SD-1-A
        risk:
        - Deployments without a defined process are error prone thus allowing old or
          untested artifact to be deployed.
        usefulness: 4
      level-2:
      - difficultyOfImplementation:
          knowledge: 2
          resources: 1
          time: 2
        implementation: []
        level: 2
        measure: 'Configuration parameters are set for each environment not in the source
          code.

          By using encryption, it is harder to read credentials , e.g. from the file
          system. Also, the usage of a credential management system can help protect
          credentials.

          '
        name: Environment depending configuration parameters (secrets)
        references:
          iso27001-2017:
          - 9.4.5
          - 14.2.6
          samm2:
          - I-SD-1-B
        risk:
        - Attackers who compromise a system can see confidential access information
          like database credentials.
        - Parameters are often used to set credentials, for example by starting containers
          or applications; these parameters can often be seen by any one listing running
          processes on the target system.
        usefulness: 4
      - difficultyOfImplementation:
          knowledge: 1
          resources: 1
          time: 1
        implementation:
        - $ref: data/dimensions-subdimensions-activities/implementations.yaml#/implementations/kubernetes-admission
        iso27001-2017:
        - 15.1.1
        - 15.1.2
        - 15.1.3
        - 14.1.3
        level: 2
        measure: Create image assessment criteria, perform an evaluation of images and
          create a whitelist of artifacts/container images/virtual machine images.
        name: Usage of trusted images
        risk:
        - Developers or operations might start random images in the production cluster
          which have malicious code or known vulnerabilities.
        samm2: I-SD-2-A
        usefulness: 3
      - difficultyOfImplementation:
          knowledge: 1
          resources: 1
          time: 2
        level: 2
        measure: By having a clear decommissioning process, applicaitons not used are
          not running anymore and can therefore not be explointed.
        name: Defined decommissioning process
        references:
          iso27001-2017:
          - 11.2.7
          samm2:
          - O-OM-2-B
        risk:
        - Not used applications erode and are not maintained. As an evil actor, I exploit
          known vulnerabilities in the not maintained applicaitons to perform latteral
          movement within the organization.
        usefulness: 2
      level-3:
      - dependsOn:
        - Defined deployment process
        difficultyOfImplementation:
          knowledge: 2
          resources: 2
          time: 2
        implementation:
        - $ref: data/dimensions-subdimensions-activities/implementations.yaml#/implementations/docker
        - $ref: data/dimensions-subdimensions-activities/implementations.yaml#/implementations/webserver
        - $ref: data/dimensions-subdimensions-activities/implementations.yaml#/implementations/rolling-update
        iso27001-2017:
        - 12.5.1
        - 14.2.2
        - 17.2.1
        level: 3
        measure: A deployment without downtime is performed*.
        name: Rolling update on deployment
        risk:
        - While a deployment is performed, the application can not be reached.
        samm2: I-SD-1-A
        usefulness: 2
      - dependsOn:
        - Defined build process
        difficultyOfImplementation:
          knowledge: 2
          resources: 1
          time: 2
        implementation:
        - $ref: data/dimensions-subdimensions-activities/implementations.yaml#/implementations/docker
        iso27001-2017:
        - 14.3.1
        - 14.2.8
        - 12.1.4
        level: 3
        measure: Building an artifact once and deploying it to different environments
          means that only tested artifacts are allowed to reach the production environment
        name: Same artifact for environments
        risk:
        - Building of an artifact for different environments means that an untested
          artifact might reach the production environment.
        samm2: I-SD-2-A
        usefulness: 4
      - dependsOn:
        - Environment depending configuration parameters (secrets)
        difficultyOfImplementation:
          knowledge: 2
          resources: 1
          time: 2
        implementation: ''
        level: 3
        measure: By using encryption, it is harder to read credentials , e.g. from the
          file system. Also, the usage of a credential management system can help protect
          credentials.
        name: Handover of confidential parameters
        references:
          iso27001-2017:
          - 14.1.3
          - 13.1.3
          - 9.4.3
          - 9.4.1
          - 10.1.2
          samm2: I-SD-2-B
        risk:
        - Attackers who compromise a system can see confidential access information
          like database credentials.
        - Parameters are often used to set credentials, for example by starting containers
          or applications; these parameters can often be seen by any one listing running
          processes on the target system.
        usefulness: 4
      - dependsOn:
        - Same artifact for environments
        difficultyOfImplementation:
          knowledge: 2
          resources: 1
          time: 1
        implementation:
        - $ref: data/dimensions-subdimensions-activities/implementations.yaml#/implementations/docker
        iso27001-2017:
        - 14.3.1
        - 14.2.8
        - 14.2.9
        - 12.1.4
        level: 3
        measure: Usage of environment independent configuration parameter, called feature
          toggles, helps to enhance the test coverage. Only what has been tested, goes
          to production.
        name: Usage of feature toggles
        risk:
        - By using environment dependent configuration, some parameters will not be
          tested correctly. i.e. <pre>if (host == 'production') {} else {}</pre>
        usefulness: 2
      - dependsOn:
        - Defined deployment process
        difficultyOfImplementation:
          knowledge: 2
          resources: 3
          time: 2
        implementation: []
        iso27001-2017:
        - '8.1'
        - '8.2'
        level: 3
        measure: A documented inventory or a possibility to gather the needed information.
        name: Inventory of running artifacts
        risk:
        - In case a vulnerability of severity high or critical exists, it needs to be
          known where an artifacts (e.g. container image) with that vulnerability is
          deployed.
        samm2: I-SD-2-A
        usefulness: 3
      - dependesOn:
        - SBOM of components
        dependsOn:
        - Defined deployment process
        difficultyOfImplementation:
          knowledge: 2
          resources: 3
          time: 2
        implementation:
        - $ref: data/dimensions-subdimensions-activities/implementations.yaml#/implementations/dependencyTrack
        iso27001-2017:
        - '8.1'
        - '8.2'
        level: 3
        measure: A documented inventory of dependencies used in images and containers
          exists.
        name: Inventory of dependencies
        risk:
        - In case a vulnerability of severity high or critical is known by the organization,
          it needs to be known where an artifacts with that vulnerability is deployed
          with which dependencies.
        samm2: I-SD-2-A
        usefulness: 3
      level-4:
      - dependsOn:
        - Smoke Test
        difficultyOfImplementation:
          knowledge: 1
          resources: 1
          time: 2
        implementation:
        - $ref: data/dimensions-subdimensions-activities/implementations.yaml#/implementations/blue-green-deploymen
        level: 4
        measure: By having multiple production environments, a deployment can be performant
          on the first environment to spot possible defects before it is deployment
          in the production environment(s)
        name: Blue/Green Deployment
        references:
          iso27001-2017:
          - 17.2.1
          - 12.1.1
          - 12.1.2
          - 12.1.4
          - 12.5.1
          - 14.2.9
          samm2:
          - TODO
        risk:
        - A new artifacts version can have unknown defects.
        usefulness: 2
      name: Deployment
